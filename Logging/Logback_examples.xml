##################################################################################
Examples: https://examples.javacodegeeks.com/core-java/logback-file-appender-example/
##################################################################################
Examples: http://qiita.com/visualskyrim/items/cd4ba1ef294880bd01b1
##################################################################################
Examples: http://www.mkyong.com/logging/logback-xml-example/
##################################################################################
<appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
    <target>System.err</target>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
    <encoder>
        <pattern>%date %level [%thread] %logger %msg%n</pattern>
    </encoder>
</appender>

<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <target>System.out</target>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
      <onMatch>ACCEPT</onMatch>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>TRACE</level>
      <onMatch>ACCEPT</onMatch>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>DENY</onMatch>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>DENY</onMatch>
    </filter>
    <encoder>
        <pattern>%date %level [%thread] %logger %msg%n</pattern>
    </encoder>
</appender>

<root level="INFO">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="STDERR" />
</root>
##################################################################################
<file>logFile.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover -->
      <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>

      <!-- keep 30 days' worth of history -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>

<configuration>
  <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>mylog.txt</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- rollover daily -->
      <fileNamePattern>mylog-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy
            class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 100MB -->
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <encoder>
      <pattern>%msg%n</pattern>
    </encoder>
  </appender>

  <root level="DEBUG">
    <appender-ref ref="ROLLING" />
  </root>
</configuration>
##################################################################################

##################################################################################

##################################################################################

##################################################################################

##################################################################################
<configuration>

  <appender name="FILE_INFO" class="ch.qos.logback.core.FileAppender">
    <!-- <file>..\myApp.log</file>  würde außerhalb des projektordners im workspace erstellen-->
    <file>src\logger_info.log</file>
  	<filter class="ch.qos.logback.classic.filter.LevelFilter">      
         <level>INFO</level>         
         <onMatch>ACCEPT</onMatch>
         <!-- <onMismatch>DENY</onMismatch>-->
    </filter>
    
    <filter class="ch.qos.logback.classic.filter.LevelFilter">      
         <level>WARN</level>         
         <onMatch>ACCEPT</onMatch>
         <!-- <onMismatch>DENY</onMismatch>-->
    </filter> 
    
	<filter class="ch.qos.logback.classic.filter.LevelFilter">      
         <level>DEBUG</level>         
         <onMatch>DENY</onMatch>
         <!-- <onMismatch>DENY</onMismatch>-->
    </filter> 
   
    <encoder>
      <pattern>%date %level [%thread] %logger{10} [%file:%line] %msg%n</pattern>
    </encoder>
  </appender>
  
  <appender name="FILE_DEBUG" class="ch.qos.logback.core.FileAppender">
    <!-- <file>..\myApp.log</file>  würde außerhalb des projektordners im workspace erstellen-->
    <file>src\logger_debug.log</file>
    <encoder>
      <pattern>%date %level [%thread] %logger{10} [%file:%line] %msg%n</pattern>
    </encoder>
  </appender>
  
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
<!--     <filter class="ch.qos.logback.classic.filter.LevelFilter">      
         <level>INFO</level>         
         <onMatch>ACCEPT</onMatch>
         <onMismatch>DENY</onMismatch>
    </filter>-->
  </appender>  
  	<!-- <logger name="start.Starter" level="debug" additivity="true">
			
	</logger>-->
	
	<root level="DEBUG">
    	<appender-ref ref="STDOUT" />
    	<appender-ref ref="FILE_DEBUG" />
    	<appender-ref ref="FILE_INFO" />
    <!-- 	
    	<appender-ref ref="FILE_DEBUG" />
    	<appender-ref ref="FILE_INFO" />
    	 -->
  	</root>
 
</configuration>
